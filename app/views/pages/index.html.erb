<div class="row">

<div class="hero well span6 offset3">
	<h3>Welcome to Fruitr</h3>
		<br/>
		<h4>Enter an artist name and hit 'Search'<h4>
		<br/>	
		<%= form_tag '/', :class=> "form-search", :method=>:get do  %>
		<%=label :name, "Artist"%>  
		<%= text_field_tag :name, params[:name], :class=>"input-medium search-query" %>
		
		<%= submit_tag "Search", :class=>"btn btn-primary", :name=>nil %>

	  	<%end%>

</div>	



<div class="artists well span6 offset3">
		<%unless @similar.nil? %>
		
		<!-- hotttnesss vs. familiarity -->
		<%= render :partial=> 'first_step' %> 
		<p>The Echonest API provides two metrics, <code>hotttnesss</code> and <code>familiarity</code> each of which is calculated based on several parametersâ€“number of record sales, number of concerts, number of live performances etc. The specifics are at best, ambiguous.</p>
		<p> So, I calculate the Pearson product-moment coefficient of correlation (r) between <code>hotttnesss</code> and <code>familiarity</code> If the correlation is strong (closer to 1) we can say that the two metrics are <i>closely related</i><sup>1</sup> and partially substantiate the methods that Echonest says it uses to calculate them.
		</p>
		<br/>
		<div id="hotfamchart" class="span6"></div>
		
		<!-- blogs vs. news -->
		<p><sup>1</sup> "closely related" is still not enough. We need more metrics to substantiate <code>hotttnesss</code> I begin by plotting <code>blogs</code> against <code>news</code> More information on these metrics is available <a href="http://developer.echonest.com/docs/v4/artist.html#news" target="_blank">here</a> and <a href="http://developer.echonest.com/docs/v4/artist.html#blogs" target="_blank">here</a>.
		</p>
		<p>
			The correlation between these two metrics will vary wildly. 
		</p>
		<%= render :partial=> 'second_step'%>
		
		<div id="blognewschart" class="span6"></div>
		
		<%end%>




	
</div>
<script type="text/javascript" charset="utf-8">
	var chart1, chart2; // globally available
	$(document).ready(function() {
	      chart1 = new Highcharts.Chart({
	         chart: {
	            renderTo: 'hotfamchart',
	            type: 'line'
	         },
	         title: {
	            text: 'Hotttnesss vs. Familiarity'
	         },
	         xAxis: {
	            title:
					{
						text:'Hotttnesss'
					}
	         },
	         yAxis: {
	            title: {
	               text: 'Familiarity'
	            }
	         },
	         series: [{
	            name: 'Hotttnesss',
	            data: <%= @hotArray.inspect %>
	         }, {
	            name: 'Familiarity',
	            data: <%= @famArray.inspect %>
	         }]
	      });
	
	    // blogs vs news
		chart2 = new Highcharts.Chart({
	         chart: {
	            renderTo: 'blognewschart',
	            type: 'line'
	         },
	         title: {
	            text: 'Total blogs vs. total news'
	         },
	         xAxis: {
	            title:
					{
						text:'Blogs'
					}
	         },
	         yAxis: {
	            title: {
	               text: 'News'
	            }
	         },
	         series: [{
	            name: 'Blogs',
	            data: <%= @blogArray.inspect %>
	         }, {
	            name: 'News',
	            data: <%= @newsArray.inspect %>
	         }]
	      });
	   });

</script>
	


	

</div>